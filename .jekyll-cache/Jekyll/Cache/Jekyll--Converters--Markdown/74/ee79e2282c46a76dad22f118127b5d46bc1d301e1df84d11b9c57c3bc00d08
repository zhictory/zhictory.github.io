I"[<p>在 JS 学习阶段，我们会执着于思考如下几种创建对象方式的异同：</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">{};</span>
<span class="kd">const</span> <span class="nx">b</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Object</span><span class="p">();</span>
<span class="kd">const</span> <span class="nx">c</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">f1</span><span class="p">();</span>
<span class="kd">const</span> <span class="nx">d</span> <span class="o">=</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="kc">null</span><span class="p">);</span>
</code></pre></div></div>

<p>站在 JS 引擎优化角度去考虑，JS 引擎更希望我们都通过 const a = {} 这种看似最没有难度的方式创建对象，因为可以共享 Shape。</p>

<p><img src="https://user-gold-cdn.xitu.io/2018/6/25/1643482d21e3de57?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="" /></p>

<blockquote>
  <p><a href="https://juejin.im/post/5b30426c51882574e94f079a">精读《JS 引擎基础之 Shapes and Inline Caches》</a></p>
</blockquote>
:ET