I"`<p>这还得从事件流说起，事件流描述的是从页面中接收事件的顺序，事件冒泡是 IE 的事件流（Netscape 用的是事件捕获流）。</p>

<p>事件冒泡指的是，事件开始时由最具体的元素接收，然后逐级向上传播到较为不具体的节点。</p>

<p>所有现代浏览器都支持事件冒泡，但是 IE5.5 及更早版本会跳过 html 根元素，其他则一直冒泡到 window 对象。</p>

<p>事件冒泡的好处就是可以集中处理事件。</p>

<p>例子：</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;style&gt;</span>
  <span class="nf">#outSide</span> <span class="p">{</span>
    <span class="nl">width</span><span class="p">:</span> <span class="m">100px</span><span class="p">;</span>
    <span class="nl">height</span><span class="p">:</span> <span class="m">100px</span><span class="p">;</span>
    <span class="nl">background</span><span class="p">:</span> <span class="m">#000</span><span class="p">;</span>
    <span class="nl">padding</span><span class="p">:</span> <span class="m">50px</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="nf">#inSide</span> <span class="p">{</span>
    <span class="nl">width</span><span class="p">:</span> <span class="m">100px</span><span class="p">;</span>
    <span class="nl">height</span><span class="p">:</span> <span class="m">100px</span><span class="p">;</span>
    <span class="nl">background</span><span class="p">:</span> <span class="m">#ccc</span><span class="p">;</span>
  <span class="p">}</span>
<span class="nt">&lt;/style&gt;</span>

<span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"outSide"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"inSide"</span><span class="nt">&gt;&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>

<span class="nt">&lt;script&gt;</span>
  <span class="kd">let</span> <span class="nx">eventHandle</span> <span class="o">=</span> <span class="p">(</span><span class="nx">e</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">,</span> <span class="nx">obj</span> <span class="o">=</span> <span class="nx">e</span><span class="p">.</span><span class="nx">target</span> <span class="o">||</span> <span class="nx">e</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">e</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();</span>
    <span class="nx">alert</span><span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">id</span><span class="p">);</span>
  <span class="p">};</span>
  <span class="nb">document</span>
    <span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">inSide</span><span class="dl">"</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">"</span><span class="s2">click</span><span class="dl">"</span><span class="p">,</span> <span class="nx">eventHandle</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
  <span class="nb">document</span>
    <span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">outSide</span><span class="dl">"</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">"</span><span class="s2">click</span><span class="dl">"</span><span class="p">,</span> <span class="nx">eventHandle</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
<span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<p>上面例子中，如果加上 <code class="language-plaintext highlighter-rouge">e.stopPropagation()</code>，点击 inSide 执行完 click 事件就会阻止事件继续冒泡，否则从 inSide 到 outSide 的 click 事件都执行一次。</p>

<p>集中处理事件体现在：如果不监听 inSide，只监听 outSide，点击 inSide 时，e.target 还是指 inSide，不会因为没监听它就不指向它，这就是事件冒泡决定的（由具体到不具体）。</p>

<p>参考：</p>
<blockquote>
  <p><a href="https://blog.csdn.net/xixi880928/article/details/69230076">addEventListener，jq.on以及事件委托</a></p>
</blockquote>
:ET