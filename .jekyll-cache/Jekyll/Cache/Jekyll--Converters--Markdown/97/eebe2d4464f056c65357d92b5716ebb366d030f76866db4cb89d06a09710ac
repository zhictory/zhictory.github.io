I"$<p>引用类型的参考在传递时，到底是按值传递还是按引用传递呢？下面举个例子说明：</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">trie</span> <span class="o">=</span> <span class="p">{};</span>

<span class="kd">function</span> <span class="nx">add</span><span class="p">(</span><span class="nx">newTrie</span><span class="p">,</span> <span class="nx">str</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 构建一个newTrie</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">len</span> <span class="o">=</span> <span class="nx">str</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">len</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">value</span> <span class="o">=</span> <span class="nx">str</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">newTrie</span><span class="p">[</span><span class="nx">value</span><span class="p">]</span> <span class="o">==</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">newTrie</span><span class="p">[</span><span class="nx">value</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span>
        <span class="na">val</span><span class="p">:</span> <span class="nx">value</span><span class="p">,</span>
        <span class="na">deep</span><span class="p">:</span> <span class="nx">i</span><span class="p">,</span>
        <span class="na">appearCount</span><span class="p">:</span> <span class="mi">1</span>
      <span class="p">};</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
      <span class="nx">newTrie</span><span class="p">.</span><span class="nx">appearCount</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="nx">newTrie</span> <span class="o">=</span> <span class="nx">newTrie</span><span class="p">[</span><span class="nx">value</span><span class="p">];</span>
  <span class="p">}</span>
  <span class="nx">newTrie</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Object</span><span class="p">();</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">trie</span><span class="p">);</span>
<span class="p">}</span>
<span class="nx">add</span><span class="p">(</span><span class="nx">trie</span><span class="p">,</span> <span class="dl">"</span><span class="s2">banana</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div>

<p>上面的例子中，将 trie 传递给函数 add，那么：</p>

<ol>
  <li>按值传递的话，当 newTrie 修改属性时，trie 会有相同的变化，当 newTrie = new Object() ，trie 不会改变，因为 newTrie 指向新对象地址了。</li>
  <li>按引用传递的话，当 newTrie 修改属性时，trie 会有相同的变化，当 newTrie = new Object() 时，trie 会改变，因为修改了同个地址的对象。</li>
</ol>

<p>结果是第一种情况，所以传递参数是按值传递（本质是复制）的。</p>

<p>下面用图解释两者的区别：</p>

<p><img src="/assets/img/params.png" alt="" /></p>

<p><a href="https://www.processon.com/view/link/579acecbe4b03e26b9144312">传递参数</a></p>
:ET